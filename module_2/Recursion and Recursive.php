<?php

//  রিকার্শন (Recursion) হলো এমন একটি প্রক্রিয়া, যেখানে কোন একটি ফাংশন বা পদ্ধতি নিজেই নিজেকে কল করে নির্দিষ্ট শর্ত পর্যন্ত
// সমস্যার সমাধান করে। রিকার্শন মূলত জটিল সমস্যাগুলিকে ছোট ছোট উপ-সমস্যায় ভাগ করে সমাধান করতে সাহায্য করে। 
// প্রতিটি কলের সময় ফাংশন একটি নির্দিষ্ট শর্ত চেক করে এবং সেই শর্ত পূরণ হলে নিজে কল করা বন্ধ করে।

// রিকার্সিভ ফাংশন (Recursive Function) হলো সেই ধরনের ফাংশন যা নিজে নিজেকে কল করতে পারে।
// সাধারণত এটি একটি ভিত্তি কেস (base case) এবং একটি রিকার্সিভ কেস (recursive case) এর উপর ভিত্তি করে কাজ করে।

// উদাহরণ:
// ধরো আমরা কোন একটি সংখ্যা পর্যন্ত ফ্যাক্টরিয়াল (Factorial) বের করতে চাই। ফ্যাক্টরিয়াল বের করার জন্য রিকার্সিভ
// ফাংশন ব্যবহার করতে পারি।

// ফ্যাক্টরিয়াল ফাংশন:
// ফ্যাক্টরিয়াল বলতে বোঝায় 
// n!= n×(n−1)×(n−2)×⋯×1

// 1 এর ফ্যাক্টরিয়াল হল 1 এবং এটি আমাদের ভিত্তি কেস।

// উদাহরণস্বরূপ:
// ধরা যাক, আমাদের একটি ফাংশন দরকার যা ১ থেকে একটি নির্দিষ্ট সংখ্যার (যেমন ৫) পর্যন্ত সংখ্যাগুলোর গুনফল (ফ্যাক্টোরিয়াল) বের করবে। 
// এই সমস্যাটি সমাধানের জন্য আমরা রিকার্সিভ ফাংশন ব্যবহার করতে পারি।

// PHP কোড:

// php
// Copy code

// function factorial($n) {
//     // বেস কেস বা স্টপিং কন্ডিশন
//     if ($n <= 1) {
//         return 1;
//     }
//     // রিকার্সিভ কল
//     else {
//         return $n * factorial($n - 1);
//     }
// }

//  উদাহরণ ডাকা
// $number = 5;
// echo "ফ্যাক্টোরিয়াল {$number} হলো: " . factorial($number);

// ব্যাখ্যা: উপরের কোডে factorial ফাংশনটি রিকার্সিভ পদ্ধতিতে ৫ এর ফ্যাক্টোরিয়াল বের করবে। 
// এটি বারবার নিজেই নিজেকে কল করবে যতক্ষণ না পর্যন্ত $n এর মান ১ বা তার কম হয়।  



 function recursive($i){
    if( $i >= 10) { 
       return ;
    }
    echo $i. " ";
    $i++;
    recursive($i);

 }
 recursive(0);

echo PHP_EOL;
echo PHP_EOL;

function recursiveWithArguments($counter, $end, $stepping){
   if($counter >= $end){
      return ;
   }
   echo $counter. " ";
   $counter+=$stepping;
   recursiveWithArguments($counter, $end, $stepping);
}

recursiveWithArguments(0, 20, 1);
?>